@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@*<ul class="navbar-nav flex-grow-1" style="display: inline-flex;justify-content: flex-end;">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>

    }
    else
    {

<li class="nav-item" style="transform: translate(0px, 2px);">
    <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
</li>
        <li class="nav-item">
            <div class="signin-button">
                <a class="nav-link text-white" href="/Identity/Account/Login" style="position: relative;top: -6.313px;left: 13px;">Sign in<span class="continue-arrow"><img class="continue-arrow" src="/Images/arrowvectorwhite.png" alt="signin-arrowvector"></span></a>
            </div>
        </li>
    }
</ul>*@

